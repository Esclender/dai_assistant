[build-system]
requires = ["setuptools>=42", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dai-assistant"
version = "0.1.0"
description = "CLI-based system for orchestrating collaborative AI agents"
readme = "README.md"
requires-python = ">=3.8"
license = "MIT"
authors = [
    {name = "Esclender Lugo"}
]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Operating System :: OS Independent",
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
dependencies = [
    "typer>=0.9.0",
    "pydantic>=2.0.0",
    "httpx>=0.24.0",
    "PyYAML>=6.0",
    "rich>=13.0.0",
    "asyncio>=3.4.3",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.20.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "flake8>=6.0.0",
]

[project.scripts]
dai = "cli.main:cli"

[tool.setuptools]
package-dir = {"" = "src"}
packages = ["cli", "output", "knowledge", "templates", "orchestrator", 
           "agent_runtime", "llm_connector", "error_handling", "agent_definition", 
           "dependency_graph"]

[tool.black]
line-length = 88
target-version = ["py38", "py39", "py310"]

[tool.isort]
profile = "black"
line_length = 88

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
asyncio_mode = "auto" 